# The ``2-matrix_divided`` module
============================================

How to use 2-matrix_divided.py
============================================

This library has one function called `matrix_divided()`

`matrix_divided()` returns a new matrix after a given matrix has been
divided by a number `div`:

Importing the function matrix_divided.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing by a positive or negative integer.

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 5)
[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, -5)
[[-0.2, -0.4, -0.6], [-0.8, -1.0, -1.2]]

>>> matrix = [[1.1, 2, -3.3], [4, 5.5, -6]]
>>> matrix_divided(matrix, 5)
[[0.22, 0.4, -0.66], [0.8, 1.1, -1.2]]

>>> matrix = [[1, 2.2, -3.3], [4.4, 5.5, -6]]
>>> matrix_divided(matrix, -5)
[[-0.2, -0.44, 0.66], [-0.88, -1.1, 1.2]]


Dividing by a positive or negative float.

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2.2)
[[0.45, 0.91, 1.36], [1.82, 2.27, 2.73]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, -2.2)
[[-0.45, -0.91, -1.36], [-1.82, -2.27, -2.73]]

>>> matrix = [[1.1, 2, -3.3], [4, 5.5, -6]]
>>> matrix_divided(matrix, 5.5)
[[0.2, 0.36, -0.6], [0.73, 1.0, -1.09]]


Dividing by 1

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]


Dividing by a boolean

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, True)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, False)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

Dividing by a string.

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "1")
Traceback (most recent call last):
    ...
TypeError: div must be a number

Dividing by None.

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
    ...
TypeError: div must be a number


Dividing by a various types.

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, [1, 2])
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, {1})
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, ())
Traceback (most recent call last):
    ...
TypeError: div must be a number

Dividing by 0

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero


Dividing an empty matrix

>>> matrix = []
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
ValueError: matrix must have at least one element

>>> matrix = [[]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
ValueError: matrix must have at least one element


Dividing a matrix with rows of different lengths

>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
ValueError: each row of the matrix must have the same size


Dividing a matrix with non-numeric elements

>>> matrix = [[1, 2, '3'], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: all matrix elements must be numbers


Dividing a matrix with a mix of integer and float elements
```python
>>> matrix = [[1, 2, 3], [4, 5, 6.6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: all matrix elements must be numbers
